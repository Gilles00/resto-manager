from django.contrib.auth.models import User
from django.db import models
from django.db.models.signals import post_save
from django.contrib.auth.models import Permission
from django.contrib.contenttypes.models import ContentType
from restaurants.models import Menu, Repas
import datetime
import reversion

#classe client
class UserProfile(models.Model):
    user = models.OneToOneField(User, related_name="user_profile", null=True, blank=True)
    telephone = models.CharField(max_length=30,null=True,blank=True)
    address = models.CharField(max_length=100, null=True, blank=True)
    birthdate = models.DateField(null=True, blank=True)

    def __unicode__(self):
        return self.user.username


class Restaurateur(models.Model):
    user = models.OneToOneField(User, related_name="restaurateur", null=True, blank=True)
    telephone = models.CharField(max_length=20,null=True,blank=True)

    def __unicode__(self):
        return self.user.first_name + " " + self.user.last_name
	
    def delete(self):
        #En supprimant le user associé, le restaurateur est automatiquement supprimé ON CASCADE
        self.user.delete()

"""
Chaque fois qu'un restaurateur est créé, on lui donne les permissions nécéssaires pour
gérer un menu de restaurant dans l'admin
"""

def set_restaurateur_permissions(sender, instance, created, **kwargs):
    if created:
        content_type_menu = ContentType.objects.get_for_model(Menu)
        content_type_repas = ContentType.objects.get_for_model(Repas)
        change_menu  = Permission.objects.get(content_type=content_type_menu, codename='change_menu')
        add_repas    = Permission.objects.get(content_type=content_type_repas, codename='add_repas')
        change_repas = Permission.objects.get(content_type=content_type_repas, codename='change_repas')
        delete_repas = Permission.objects.get(content_type=content_type_repas, codename='delete_repas')
        instance.user.user_permissions.add(change_menu)
        instance.user.user_permissions.add(add_repas)
        instance.user.user_permissions.add(change_repas)
        instance.user.user_permissions.add(delete_repas)

        instance.user.is_staff = True
        instance.user.save()
        
post_save.connect(set_restaurateur_permissions, sender=Restaurateur)

#Pour le undo
reversion.register(Restaurateur)
reversion.register(User)