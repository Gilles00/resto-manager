from django.contrib.auth.models import User
from django.db import models
from django.db.models.signals import post_save
import datetime
import reversion

#classe client
class UserProfile(models.Model):
    user = models.OneToOneField(User, related_name="user_profile", null=True, blank=True)
    telephone = models.CharField(max_length=30,null=True,blank=True)
    address = models.CharField(max_length=100, null=True, blank=True)
    birthdate = models.DateField(null=True, blank=True)

    def __unicode__(self):
        return self.user.username


#"""
#Chaque fois qu'un user est créé, un profile vide lui est automatiquement associé
#"""

#def create_user_profile(sender, instance, created, **kwargs):
#    if created:
#        profile, created = UserProfile.objects.get_or_create(user=instance)

#post_save.connect(create_user_profile, sender=User)

class Restaurateur(models.Model):
    user = models.OneToOneField(User, related_name="restaurateur", null=True, blank=True)
    telephone = models.CharField(max_length=20,null=True,blank=True)

    def __unicode__(self):
        return self.user.first_name + " " + self.user.last_name
	
    def delete(self):
        #En supprimant le user associé, le restaurateur est automatiquement supprimé ON CASCADE
        self.user.delete()

#Pour le undo
reversion.register(Restaurateur)
reversion.register(User)